// Code generated by protoc-gen-go. DO NOT EDIT.
// source: reportapi.proto

package reportapi

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ReportRequest struct {
	Message              string   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Tag                  string   `protobuf:"bytes,2,opt,name=tag,proto3" json:"tag,omitempty"`
	Username             string   `protobuf:"bytes,3,opt,name=username,proto3" json:"username,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReportRequest) Reset()         { *m = ReportRequest{} }
func (m *ReportRequest) String() string { return proto.CompactTextString(m) }
func (*ReportRequest) ProtoMessage()    {}
func (*ReportRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_bfb4f2a888738378, []int{0}
}

func (m *ReportRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReportRequest.Unmarshal(m, b)
}
func (m *ReportRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReportRequest.Marshal(b, m, deterministic)
}
func (m *ReportRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReportRequest.Merge(m, src)
}
func (m *ReportRequest) XXX_Size() int {
	return xxx_messageInfo_ReportRequest.Size(m)
}
func (m *ReportRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ReportRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ReportRequest proto.InternalMessageInfo

func (m *ReportRequest) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *ReportRequest) GetTag() string {
	if m != nil {
		return m.Tag
	}
	return ""
}

func (m *ReportRequest) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

type ReportResponse struct {
	Timestamp            int64    `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Tag                  string   `protobuf:"bytes,3,opt,name=tag,proto3" json:"tag,omitempty"`
	Username             string   `protobuf:"bytes,4,opt,name=username,proto3" json:"username,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReportResponse) Reset()         { *m = ReportResponse{} }
func (m *ReportResponse) String() string { return proto.CompactTextString(m) }
func (*ReportResponse) ProtoMessage()    {}
func (*ReportResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_bfb4f2a888738378, []int{1}
}

func (m *ReportResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReportResponse.Unmarshal(m, b)
}
func (m *ReportResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReportResponse.Marshal(b, m, deterministic)
}
func (m *ReportResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReportResponse.Merge(m, src)
}
func (m *ReportResponse) XXX_Size() int {
	return xxx_messageInfo_ReportResponse.Size(m)
}
func (m *ReportResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ReportResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ReportResponse proto.InternalMessageInfo

func (m *ReportResponse) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *ReportResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *ReportResponse) GetTag() string {
	if m != nil {
		return m.Tag
	}
	return ""
}

func (m *ReportResponse) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

type ReportFilter struct {
	Tag                  string   `protobuf:"bytes,1,opt,name=tag,proto3" json:"tag,omitempty"`
	Username             string   `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReportFilter) Reset()         { *m = ReportFilter{} }
func (m *ReportFilter) String() string { return proto.CompactTextString(m) }
func (*ReportFilter) ProtoMessage()    {}
func (*ReportFilter) Descriptor() ([]byte, []int) {
	return fileDescriptor_bfb4f2a888738378, []int{2}
}

func (m *ReportFilter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReportFilter.Unmarshal(m, b)
}
func (m *ReportFilter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReportFilter.Marshal(b, m, deterministic)
}
func (m *ReportFilter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReportFilter.Merge(m, src)
}
func (m *ReportFilter) XXX_Size() int {
	return xxx_messageInfo_ReportFilter.Size(m)
}
func (m *ReportFilter) XXX_DiscardUnknown() {
	xxx_messageInfo_ReportFilter.DiscardUnknown(m)
}

var xxx_messageInfo_ReportFilter proto.InternalMessageInfo

func (m *ReportFilter) GetTag() string {
	if m != nil {
		return m.Tag
	}
	return ""
}

func (m *ReportFilter) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

type ReportListResponse struct {
	ListOfDetails        []*ReportResponse `protobuf:"bytes,1,rep,name=listOfDetails,proto3" json:"listOfDetails,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ReportListResponse) Reset()         { *m = ReportListResponse{} }
func (m *ReportListResponse) String() string { return proto.CompactTextString(m) }
func (*ReportListResponse) ProtoMessage()    {}
func (*ReportListResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_bfb4f2a888738378, []int{3}
}

func (m *ReportListResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReportListResponse.Unmarshal(m, b)
}
func (m *ReportListResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReportListResponse.Marshal(b, m, deterministic)
}
func (m *ReportListResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReportListResponse.Merge(m, src)
}
func (m *ReportListResponse) XXX_Size() int {
	return xxx_messageInfo_ReportListResponse.Size(m)
}
func (m *ReportListResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ReportListResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ReportListResponse proto.InternalMessageInfo

func (m *ReportListResponse) GetListOfDetails() []*ReportResponse {
	if m != nil {
		return m.ListOfDetails
	}
	return nil
}

func init() {
	proto.RegisterType((*ReportRequest)(nil), "ReportRequest")
	proto.RegisterType((*ReportResponse)(nil), "ReportResponse")
	proto.RegisterType((*ReportFilter)(nil), "ReportFilter")
	proto.RegisterType((*ReportListResponse)(nil), "ReportListResponse")
}

func init() { proto.RegisterFile("reportapi.proto", fileDescriptor_bfb4f2a888738378) }

var fileDescriptor_bfb4f2a888738378 = []byte{
	// 250 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x91, 0xbf, 0x4f, 0xfb, 0x30,
	0x10, 0xc5, 0x95, 0xf8, 0xab, 0x7e, 0xe9, 0x41, 0x5a, 0x74, 0x2c, 0x56, 0xc4, 0x50, 0x75, 0x6a,
	0x17, 0x0f, 0x45, 0x6c, 0x8c, 0x08, 0x06, 0x90, 0x90, 0xcc, 0xc0, 0x6c, 0xd0, 0x51, 0x59, 0x4a,
	0x1a, 0xe3, 0xbb, 0xf6, 0xef, 0x47, 0x38, 0x0a, 0x6d, 0x42, 0x36, 0xdf, 0x93, 0xdf, 0xfb, 0xdc,
	0x0f, 0x98, 0x47, 0x0a, 0x4d, 0x14, 0x17, 0xbc, 0x09, 0xb1, 0x91, 0x66, 0xf9, 0x06, 0x85, 0x4d,
	0x92, 0xa5, 0xaf, 0x3d, 0xb1, 0xa0, 0x86, 0xff, 0x35, 0x31, 0xbb, 0x2d, 0xe9, 0x6c, 0x91, 0xad,
	0xa6, 0xb6, 0x2b, 0xf1, 0x12, 0x94, 0xb8, 0xad, 0xce, 0x93, 0xfa, 0xf3, 0xc4, 0x12, 0xce, 0xf6,
	0x4c, 0x71, 0xe7, 0x6a, 0xd2, 0x2a, 0xc9, 0xbf, 0xf5, 0xf2, 0x00, 0xb3, 0x2e, 0x98, 0x43, 0xb3,
	0x63, 0xc2, 0x6b, 0x98, 0x8a, 0xaf, 0x89, 0xc5, 0xd5, 0x21, 0x65, 0x2b, 0x7b, 0x14, 0x4e, 0xb9,
	0xf9, 0x28, 0x57, 0x8d, 0x73, 0xff, 0x0d, 0xb8, 0x77, 0x70, 0xd1, 0x72, 0x1f, 0x7c, 0x25, 0x14,
	0x3b, 0x77, 0x36, 0xee, 0xce, 0x07, 0xee, 0x27, 0xc0, 0xd6, 0xfd, 0xec, 0xf9, 0xd8, 0xf9, 0x2d,
	0x14, 0x95, 0x67, 0x79, 0xf9, 0xbc, 0x27, 0x71, 0xbe, 0x62, 0x9d, 0x2d, 0xd4, 0xea, 0x7c, 0x33,
	0x37, 0xfd, 0x09, 0x6d, 0xff, 0xd7, 0x86, 0xba, 0xdd, 0xbe, 0x52, 0x3c, 0xf8, 0x0f, 0xc2, 0x35,
	0x4c, 0x5a, 0x01, 0x67, 0xa6, 0xb7, 0xf5, 0x72, 0x18, 0x85, 0x6b, 0x50, 0x8f, 0x24, 0x58, 0x98,
	0xd3, 0x61, 0xca, 0x2b, 0xf3, 0xb7, 0xbb, 0xf7, 0x49, 0xba, 0xe4, 0xcd, 0x77, 0x00, 0x00, 0x00,
	0xff, 0xff, 0x5e, 0x7b, 0x3f, 0x3f, 0xdc, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ReportServiceClient is the client API for ReportService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ReportServiceClient interface {
	Report(ctx context.Context, in *ReportRequest, opts ...grpc.CallOption) (*ReportResponse, error)
	Get(ctx context.Context, in *ReportFilter, opts ...grpc.CallOption) (*ReportListResponse, error)
}

type reportServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewReportServiceClient(cc grpc.ClientConnInterface) ReportServiceClient {
	return &reportServiceClient{cc}
}

func (c *reportServiceClient) Report(ctx context.Context, in *ReportRequest, opts ...grpc.CallOption) (*ReportResponse, error) {
	out := new(ReportResponse)
	err := c.cc.Invoke(ctx, "/ReportService/Report", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *reportServiceClient) Get(ctx context.Context, in *ReportFilter, opts ...grpc.CallOption) (*ReportListResponse, error) {
	out := new(ReportListResponse)
	err := c.cc.Invoke(ctx, "/ReportService/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ReportServiceServer is the server API for ReportService service.
type ReportServiceServer interface {
	Report(context.Context, *ReportRequest) (*ReportResponse, error)
	Get(context.Context, *ReportFilter) (*ReportListResponse, error)
}

// UnimplementedReportServiceServer can be embedded to have forward compatible implementations.
type UnimplementedReportServiceServer struct {
}

func (*UnimplementedReportServiceServer) Report(ctx context.Context, req *ReportRequest) (*ReportResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Report not implemented")
}
func (*UnimplementedReportServiceServer) Get(ctx context.Context, req *ReportFilter) (*ReportListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Get not implemented")
}

func RegisterReportServiceServer(s *grpc.Server, srv ReportServiceServer) {
	s.RegisterService(&_ReportService_serviceDesc, srv)
}

func _ReportService_Report_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReportRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ReportServiceServer).Report(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ReportService/Report",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ReportServiceServer).Report(ctx, req.(*ReportRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ReportService_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReportFilter)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ReportServiceServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ReportService/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ReportServiceServer).Get(ctx, req.(*ReportFilter))
	}
	return interceptor(ctx, in, info, handler)
}

var _ReportService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "ReportService",
	HandlerType: (*ReportServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Report",
			Handler:    _ReportService_Report_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _ReportService_Get_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "reportapi.proto",
}
