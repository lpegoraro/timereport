// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/service/reportstorage.proto

package pb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ReportEntity struct {
	Timestamp            int64    `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Tag                  string   `protobuf:"bytes,3,opt,name=tag,proto3" json:"tag,omitempty"`
	Username             string   `protobuf:"bytes,4,opt,name=username,proto3" json:"username,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReportEntity) Reset()         { *m = ReportEntity{} }
func (m *ReportEntity) String() string { return proto.CompactTextString(m) }
func (*ReportEntity) ProtoMessage()    {}
func (*ReportEntity) Descriptor() ([]byte, []int) {
	return fileDescriptor_7d7abc3a96668bd7, []int{0}
}

func (m *ReportEntity) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReportEntity.Unmarshal(m, b)
}
func (m *ReportEntity) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReportEntity.Marshal(b, m, deterministic)
}
func (m *ReportEntity) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReportEntity.Merge(m, src)
}
func (m *ReportEntity) XXX_Size() int {
	return xxx_messageInfo_ReportEntity.Size(m)
}
func (m *ReportEntity) XXX_DiscardUnknown() {
	xxx_messageInfo_ReportEntity.DiscardUnknown(m)
}

var xxx_messageInfo_ReportEntity proto.InternalMessageInfo

func (m *ReportEntity) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *ReportEntity) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *ReportEntity) GetTag() string {
	if m != nil {
		return m.Tag
	}
	return ""
}

func (m *ReportEntity) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func init() {
	proto.RegisterType((*ReportEntity)(nil), "report.ReportEntity")
}

func init() { proto.RegisterFile("proto/service/reportstorage.proto", fileDescriptor_7d7abc3a96668bd7) }

var fileDescriptor_7d7abc3a96668bd7 = []byte{
	// 190 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0xcf, 0xbb, 0xcb, 0xc2, 0x30,
	0x14, 0x05, 0x70, 0xfa, 0xa0, 0xdf, 0xd7, 0x8b, 0x43, 0x09, 0x0e, 0xa1, 0x38, 0x54, 0xa7, 0x4e,
	0x2d, 0xe8, 0xe2, 0x2c, 0xb8, 0x39, 0xd5, 0xcd, 0x2d, 0x95, 0x4b, 0xc9, 0x90, 0x26, 0x24, 0xd7,
	0x42, 0xff, 0x7b, 0x69, 0x82, 0x8f, 0xc1, 0x25, 0x9c, 0xf3, 0xcb, 0x90, 0x13, 0xd8, 0x1a, 0xab,
	0x49, 0xb7, 0x0e, 0xed, 0x24, 0xef, 0xd8, 0x5a, 0x34, 0xda, 0x92, 0x23, 0x6d, 0xc5, 0x80, 0x8d,
	0xbf, 0x63, 0x59, 0xc0, 0x1d, 0xc1, 0xaa, 0xf3, 0xe9, 0x3c, 0x92, 0xa4, 0x99, 0x6d, 0x20, 0x27,
	0xa9, 0xd0, 0x91, 0x50, 0x86, 0x47, 0x55, 0x54, 0x27, 0xdd, 0x07, 0x18, 0x87, 0x3f, 0x85, 0xce,
	0x89, 0x01, 0x79, 0x5c, 0x45, 0x75, 0xde, 0xbd, 0x2a, 0x2b, 0x20, 0x21, 0x31, 0xf0, 0xc4, 0xeb,
	0x12, 0x59, 0x09, 0xff, 0x0f, 0x87, 0x76, 0x14, 0x0a, 0x79, 0xea, 0xf9, 0xdd, 0xf7, 0x17, 0x28,
	0xc2, 0xab, 0xcb, 0xe9, 0x24, 0x69, 0x3b, 0xb3, 0x23, 0xc0, 0x55, 0x4c, 0x18, 0x9c, 0xad, 0x9b,
	0x30, 0xb0, 0xf9, 0x5e, 0x57, 0xfe, 0xd4, 0x53, 0x7a, 0x8b, 0x4d, 0xdf, 0x67, 0xfe, 0x63, 0x87,
	0x67, 0x00, 0x00, 0x00, 0xff, 0xff, 0xcd, 0xae, 0xa3, 0x11, 0xfd, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ReportRepositoryClient is the client API for ReportRepository service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ReportRepositoryClient interface {
	SaveReport(ctx context.Context, in *ReportEntity, opts ...grpc.CallOption) (*ReportEntity, error)
}

type reportRepositoryClient struct {
	cc grpc.ClientConnInterface
}

func NewReportRepositoryClient(cc grpc.ClientConnInterface) ReportRepositoryClient {
	return &reportRepositoryClient{cc}
}

func (c *reportRepositoryClient) SaveReport(ctx context.Context, in *ReportEntity, opts ...grpc.CallOption) (*ReportEntity, error) {
	out := new(ReportEntity)
	err := c.cc.Invoke(ctx, "/report.ReportRepository/SaveReport", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ReportRepositoryServer is the server API for ReportRepository service.
type ReportRepositoryServer interface {
	SaveReport(context.Context, *ReportEntity) (*ReportEntity, error)
}

// UnimplementedReportRepositoryServer can be embedded to have forward compatible implementations.
type UnimplementedReportRepositoryServer struct {
}

func (*UnimplementedReportRepositoryServer) SaveReport(ctx context.Context, req *ReportEntity) (*ReportEntity, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SaveReport not implemented")
}

func RegisterReportRepositoryServer(s *grpc.Server, srv ReportRepositoryServer) {
	s.RegisterService(&_ReportRepository_serviceDesc, srv)
}

func _ReportRepository_SaveReport_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReportEntity)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ReportRepositoryServer).SaveReport(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/report.ReportRepository/SaveReport",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ReportRepositoryServer).SaveReport(ctx, req.(*ReportEntity))
	}
	return interceptor(ctx, in, info, handler)
}

var _ReportRepository_serviceDesc = grpc.ServiceDesc{
	ServiceName: "report.ReportRepository",
	HandlerType: (*ReportRepositoryServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SaveReport",
			Handler:    _ReportRepository_SaveReport_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/service/reportstorage.proto",
}
